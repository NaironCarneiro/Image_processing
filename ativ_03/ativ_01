# coding=utf-8
from asyncio import constants
from ctypes.wintypes import FLOAT
from hashlib import sha1
from tokenize import Double
import cv2
import numpy as np
# from matplotlib import pyplot as plt

imagem = cv2.imread('logo-if.jpg')

def ajuste_brilho(img,br):
    brilho=[br,br,br]
    res=np.zeros(img.shape, np.uint8)
    for y in range(0, img.shape[0]):
        for x in range(0, img.shape[1]):
            res[y, x] = np.minimum(img[y,x]+brilho,[255,255,255])
    return res

def ajuste_contraste(img,con):
    contraste = [con,con,con]
    res=np.zeros(img.shape, np.uint8)
    for i in range(0, img.shape[0]):
        for j in range(0, img.shape[1]):
                res[i,j] = np.minimum(contraste*img[i,j],[255,255,255])
    return res

def ajuste_negativo(img,neg):
    negativo = [neg,neg,neg]
    res=np.zeros(img.shape, np.uint8)
    for i in range(0, img.shape[0]):
        for j in range(0, img.shape[1]):
                res[i,j] = np.minimum(negativo-img[i,j],[255,255,255])
    return res

cv2.namedWindow('Imagem Final')
brilho=0
contraste=1
negativo = 255
result=imagem

while(True):
    cv2.imshow('Imagem Final',result)
    k=cv2.waitKey(20)
    if k == 27:
        break
#Brilho
    elif k == ord('a'):
        brilho=min(brilho+50,255)
        result=ajuste_brilho(imagem,brilho)
    elif k == ord('z'):
        brilho=max(brilho-50,0)
        result=ajuste_brilho(imagem,brilho)
#Contraste
    elif k == ord('s'):
        contraste=min(contraste+0.10,255)
        print("aumenta",float(contraste))
        if(contraste > 1):
            result=ajuste_contraste(imagem,contraste)
    elif k == ord('x'):
        contraste=max(contraste-0.10,0)
        print("diminui",float(contraste))
        if(contraste > 0 and contraste < 1):
            result=ajuste_contraste(imagem,contraste)
#Negativo
    elif k == ord('n'):
        negativo=max(negativo,0)
        result=ajuste_negativo(imagem,negativo)

cv2.destroyAllWindows()